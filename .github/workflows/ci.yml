name: "ðŸ¦• Deno CI"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

defaults:
  run:
    shell: bash
    working-directory: ./

permissions:
  contents: read

jobs:
  deno:
    runs-on: ${{matrix.os}}
    # Continue in case the canary run does not succeed
    continue-on-error: ${{matrix.canary}}
    # env:
    #   DENO_DIR: .deno-cache
    #   CACHE_VERSION: ${{secrets.CACHE_VERSION}}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        deno: [v1.x]
        canary: [false]
        include:
          - deno: canary
            os: ubuntu-20.04
            canary: true
    steps:
      - name: "(env) gitconfig"
        run: |
          sudo git config --system core.autocrlf false
          sudo git config --system core.eol lf

      - name: "(cache) setup"
        uses: actions/cache@v2
        with:
          path: ${{env.DENO_DIR}}
          key: deno911-${{hashFiles('./{deps.ts,import_map.json}')}}

      - name: "(env) checkout"
        uses: actions/checkout@v3

      - name: "(setup) ðŸ¦• ${{matrix.deno}}"
        uses: denoland/setup-deno@main
        with:
          deno-version: ${{matrix.deno}}

      - name: "(cache) reload"
        run: deno cache --reload --lock-write deps.ts

      - name: "(run) fmt"
        run: deno fmt --unstable

      - name: "(run) lint"
        run: deno lint --unstable --no-bad-types --

      - name: "(run) test"
        run: deno test -A --unstable --no-check
